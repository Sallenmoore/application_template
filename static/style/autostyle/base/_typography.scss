@use 'sass:color';

@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Changa:wght@200..800&family=Comic+Neue:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Coming+Soon&family=Jaro:opsz@6..72&family=Josefin+Slab:ital,wght@0,100..700;1,100..700&family=Noto+Serif+Display:ital,wght@0,100..900;1,100..900&family=Rosarivo:ital@0;1&family=Wellfleet&display=swap');
$list-style-type: disc !default;
$list-margin-left: calculateRem(20) !default;
$list-margin-top: calculateRem(16) !default;

$heading-font-family: "Rosarivo", cursive !default;
$heading-font-weight: 600 !default;
$heading-line-height: 1.5 !default;
$heading-margin-bottom: calculateRem(7.2) !default;
$heading-color: color.scale($secondarytext, $lightness: 40%, $saturation: 10%) !default;

$subheading-margin-bottom: calculateRem(16) !default;
$subheading-margin-top: calculateRem(-6.4) !default;
$subheading-font-weight: 400 !default;
$subheading-line-height: $heading-line-height !default;
$subheading-color: createColor(#a2a2a2) !default;

$blockquote-border-color: createColor(#d6d6d6) !default;
$blockquote-border-width: 1px !default;
$blockquote-color: var(--color-black) !default;
$blockquote-margin: calculateRem(16) 0 0 !default;
$blockquote-padding: 0.5rem 0 0.5rem 1.25rem !default;
$cite-font-size: calculateRem(13) !default;
$cite-color: var(--color-black) !default;

$abbr-border-color: var(--color-black) !default;

:root
{
    --body-heading-font-family: #{$heading-font-family};
}

%heading
{
    --font-color: #{$heading-color};
    --font-family: var(--body-heading-font-family);
    --font-weight: #{$heading-font-weight};
    --line-height: #{$heading-line-height};
    color: var(--font-color);
    display: block;
    font-family: var(--font-family);
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    line-height: var(--line-height);
    margin-bottom: $heading-margin-bottom;
    word-wrap: break-word;
    white-space: normal;

    &.is-subheading
    {
        --font-color: #{$subheading-color};
        --font-weight: #{$subheading-font-weight};
        --line-height: #{$subheading-line-height};
    }

    &:not(.is-subheading) + .is-subheading
    {
        margin-top: $subheading-margin-top;
    }

    & + .is-subheading:last-of-type
    {
        margin-bottom: $subheading-margin-top;
    }
}

$heading-sizes: 'very-big-heading' h1, 'big-heading' h2, 'medium-heading' h3, 'heading' h4, 'small-heading' h5, 'very-small-heading' h6;

@function heading-size($key)
{
    @if map-has-key($heading-size, $key)
    {
        @return map-get($heading-size, $key);
    }

    @warn "Unknown `#{$key}` in $heading-sizes.";
    @return null;
}

$heading-size: (
    h1: clamp(1.5rem, calculateRem($font-base * 3.25), 5rem),
    h2: clamp(1.2rem, calculateRem($font-base * 2.1), 3rem),
    h3: clamp(1rem, calculateRem($font-base * 1.5), 2rem),
    h4: clamp(0.88rem, calculateRem($font-base * 1.25), 1.5rem),
    h5: clamp(0.75rem, calculateRem($font-base * 1), 1.25rem),
    h6: clamp(0.5rem, calculateRem($font-base * .75), 1rem),
    ) !default;

@each $size in $heading-sizes
{

    #{nth($size, 2)},
    .is-#{nth($size, 1)}
    {
        @extend %heading;
        --font-size: #{heading-size(nth($size, 2))};
    }
}

p
{
    overflow-wrap: break-word;
    word-break: break-word;
    font-size: clamp(0.75rem, calculateRem($font-base * 1.15), 1.5rem)
}

a
{
    color: $heading-color;
    cursor: pointer;
    text-decoration: none;

    &:hover
    {
        text-decoration: underline;
    }

    .has-link-inherit &:not(.button)
    {
        color: inherit;
    }
}

ol,
ul
{
    --margin-left: #{$list-margin-left};
    --margin-top: #{$list-margin-top};

    margin-left: var(--margin-left
    );
margin-top: var(--margin-top);

ul,
ol,
dl
{
    margin-top: 0;
}
}

ul,
ol
{
    list-style-position: outside;
}

ul
{
    --style-type: #{$list-style-type};

    list-style-type: var(--style-type);

    &.has-no-list-style
    {
        list-style-type: none;
        margin-left: 0;
    }

    &.is-inline-list
    {
        display: flex !important;
        flex-flow: row wrap;
        list-style-type: none;
        margin: 0;

        & > li:not(:last-child)
        {
            margin-right: 0.5rem;
        }
    }
}

dl
{
    dt
    {
        font-weight: bold;
        margin-bottom: 0.3rem;
    }

    dd ~ dt
    {
        margin-top: 0.3rem;
    }
}

blockquote
{
    --border-color: #{$blockquote-border-color};
    --border-width: #{$blockquote-border-width};
    --font-color: #{$blockquote-color};
    --margin: #{$blockquote-margin};
    --padding: #{$blockquote-padding};

    border-left: var(--border-width) solid var(--border-color);
    color: var(--font-color);
    margin: var(--margin);
    padding: var(--padding);

    cite
    {
        --font-color: #{$cite-color};
        --font-size: #{$cite-font-size};

        color: var(--font-color);
        display: block;
        font-size: var(--font-size);

        &::before
        {
            content: "- ";
        }
    }
}

abbr
{
    --border-color: #{$abbr-border-color};

    border-bottom: 1px dotted var(--border-color);
    cursor: help;
    text-decoration: none;
}

.is-highlighted
{
    color: $primarytext;
}

.engraved
{
    text-shadow: -1px -1px rgba(0, 0, 0, 0.5), 1px 1px rgba(255, 255, 255, 0.5);
    color: rgba(0, 0, 0, 0.5);
}

.embossed
{
    text-shadow: 1px 4px 4px #555;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    background-clip: text;

}

@media print
{
    $heading-color: black !default;
    $body-font-size: 8pt !default;
}